name: Export solution and create a pull request

on:
  # Manual workflow
  workflow_dispatch:
    inputs:

      # Change this value
      solution_name:
        description: 'The name of the solution to worked on from Power Platform'
        required: true
        default: Examplesolution

       #Once set to you prefered layout avoid changing these values
      solution_exported_folder:
        description: 'The folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'The staging directory for the unpacked solution prior to check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'The name of the directory to be used or created when the solution is checked in *do not change*'
       required: true
       default: solutions/

jobs:
  export-from-dev:
    runs-on: ubuntu-latest

    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true